"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tsparticles-move-base";
exports.ids = ["vendor-chunks/tsparticles-move-base"];
exports.modules = {

/***/ "(rsc)/./node_modules/tsparticles-move-base/cjs/BaseMover.js":
/*!*************************************************************!*\
  !*** ./node_modules/tsparticles-move-base/cjs/BaseMover.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BaseMover = void 0;\nconst tsparticles_engine_1 = __webpack_require__(/*! tsparticles-engine */ \"(rsc)/./node_modules/tsparticles-engine/cjs/index.js\");\nconst Utils_1 = __webpack_require__(/*! ./Utils */ \"(rsc)/./node_modules/tsparticles-move-base/cjs/Utils.js\");\nconst diffFactor = 2;\nclass BaseMover {\n    constructor(){\n        this._initSpin = (particle)=>{\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? {\n                x: 50,\n                y: 50\n            }, spinCenter = {\n                x: spinPos.x / 100 * container.canvas.size.width,\n                y: spinPos.y / 100 * container.canvas.size.height\n            }, pos = particle.getPosition(), distance = (0, tsparticles_engine_1.getDistance)(pos, spinCenter), spinAcceleration = (0, tsparticles_engine_1.getRangeValue)(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: (0, tsparticles_engine_1.getRangeValue)(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle), baseSpeed = (particle.retina.moveSpeed ??= (0, tsparticles_engine_1.getRangeValue)(moveOptions.speed) * pxRatio) * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift ??= (0, tsparticles_engine_1.getRangeValue)(particle.options.move.drift) * pxRatio, maxSize = (0, tsparticles_engine_1.getRangeMax)(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = baseSpeed * sizeFactor * slowFactor * (delta.factor || 1) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            (0, Utils_1.spin)(particle, moveSpeed);\n        } else {\n            (0, Utils_1.move)(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        (0, Utils_1.applyDistance)(particle);\n    }\n}\nexports.BaseMover = BaseMover;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tsparticles-move-base/cjs/BaseMover.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/tsparticles-move-base/cjs/Utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/tsparticles-move-base/cjs/Utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getProximitySpeedFactor = exports.applyPath = exports.spin = exports.move = exports.applyDistance = void 0;\nconst tsparticles_engine_1 = __webpack_require__(/*! tsparticles-engine */ \"(rsc)/./node_modules/tsparticles-engine/cjs/index.js\");\nfunction applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = (0, tsparticles_engine_1.getDistances)(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if ((hDistance && dxFixed >= hDistance || vDistance && dyFixed >= vDistance) && !particle.misplaced) {\n        particle.misplaced = !!hDistance && dxFixed > hDistance || !!vDistance && dyFixed > vDistance;\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    } else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    } else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && (pos.x < initialPosition.x && vel.x < 0 || pos.x > initialPosition.x && vel.x > 0)) {\n            vel.x *= -(0, tsparticles_engine_1.getRandom)();\n        }\n        if (vDistance && (pos.y < initialPosition.y && vel.y < 0 || pos.y > initialPosition.y && vel.y > 0)) {\n            vel.y *= -(0, tsparticles_engine_1.getRandom)();\n        }\n    }\n}\nexports.applyDistance = applyDistance;\nfunction move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexports.move = move;\nfunction spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    } else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += moveSpeed / 100 * (1 - particle.spin.radius / maxCanvasSize);\n}\nexports.spin = spin;\nfunction applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = (0, tsparticles_engine_1.clamp)(particle.velocity.x, -1, 1);\n        particle.velocity.y = (0, tsparticles_engine_1.clamp)(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexports.applyPath = applyPath;\nfunction getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\nexports.getProximitySpeedFactor = getProximitySpeedFactor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tsparticles-move-base/cjs/Utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/tsparticles-move-base/cjs/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/tsparticles-move-base/cjs/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.loadBaseMover = void 0;\nconst BaseMover_1 = __webpack_require__(/*! ./BaseMover */ \"(rsc)/./node_modules/tsparticles-move-base/cjs/BaseMover.js\");\nasync function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", ()=>new BaseMover_1.BaseMover(), refresh);\n}\nexports.loadBaseMover = loadBaseMover;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHNwYXJ0aWNsZXMtbW92ZS1iYXNlL2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxjQUFjQyxtQkFBT0EsQ0FBQyxnRkFBYTtBQUN6QyxlQUFlRixjQUFjRyxNQUFNLEVBQUVDLFVBQVUsSUFBSTtJQUMvQyxNQUFNRCxPQUFPRSxRQUFRLENBQUMsUUFBUSxJQUFNLElBQUlKLFlBQVlLLFNBQVMsSUFBSUY7QUFDckU7QUFDQU4scUJBQXFCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXYyLy4vbm9kZV9tb2R1bGVzL3RzcGFydGljbGVzLW1vdmUtYmFzZS9janMvaW5kZXguanM/Yzc4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9hZEJhc2VNb3ZlciA9IHZvaWQgMDtcbmNvbnN0IEJhc2VNb3Zlcl8xID0gcmVxdWlyZShcIi4vQmFzZU1vdmVyXCIpO1xuYXN5bmMgZnVuY3Rpb24gbG9hZEJhc2VNb3ZlcihlbmdpbmUsIHJlZnJlc2ggPSB0cnVlKSB7XG4gICAgYXdhaXQgZW5naW5lLmFkZE1vdmVyKFwiYmFzZVwiLCAoKSA9PiBuZXcgQmFzZU1vdmVyXzEuQmFzZU1vdmVyKCksIHJlZnJlc2gpO1xufVxuZXhwb3J0cy5sb2FkQmFzZU1vdmVyID0gbG9hZEJhc2VNb3ZlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvYWRCYXNlTW92ZXIiLCJCYXNlTW92ZXJfMSIsInJlcXVpcmUiLCJlbmdpbmUiLCJyZWZyZXNoIiwiYWRkTW92ZXIiLCJCYXNlTW92ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tsparticles-move-base/cjs/index.js\n");

/***/ })

};
;